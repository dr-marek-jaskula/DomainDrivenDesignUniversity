using Shopway.SourceGenerator.Generators;
using Shopway.SourceGenerator.Tests.Unit.Utilities;
using static Shopway.SourceGenerator.Tests.Unit.Utilities.Constants;

namespace Shopway.SourceGenerator.Tests.Unit.GeneratorTests;

[Trait(nameof(UnitTest), UnitTest.SourceGenerator)]
public sealed class EntityIdComparerGeneratorTests
{
    private readonly EntityIdComparerGenerator _entityIdComparerGenerator;

    public EntityIdComparerGeneratorTests()
    {
        _entityIdComparerGenerator = new EntityIdComparerGenerator();
    }

    [Fact]
    public void EntityIdComparerGenerator_ShouldGenerateEntityIdComparerAttribute()
    {
        //Act
        var actualResult = _entityIdComparerGenerator.Generate(string.Empty);

        //Assert
        actualResult.Should().Be(@"//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the dr-marek-jaskula source generator
//
//     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable enable

namespace System;

/// <summary>
/// Add to entity configurations to indicate that entity id comparer should be generated
/// </summary>
[global::System.AttributeUsage(global::System.AttributeTargets.Class, AllowMultiple = false, Inherited = false)]
[global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage(Justification = ""Generated by the dr-marek-jaskula source generator."")]
public class GenerateEntityIdComparerAttribute : global::System.Attribute
{
    public required string IdName;
    public required string IdNamespace;
}");
    }

    [Fact]
    public void EntityIdComparerGenerator_ShouldGenerateEntityIdComparer()
    {
        //Arrange
        (string input, string output) = GetEntityToGenerateId();

        //Act
        var actualResult = _entityIdComparerGenerator.Generate(input);

        //Asset
        actualResult.Should().Be(output);
    }

    private static (string input, string output) GetEntityToGenerateId()
    {
        var input = """
        using System;
        using OtherNamespace.ProductIdNamespace

        namespace MyNamespace
        {
            [GenerateEntityIdComparer(IdName = nameof(ProductId), IdNamespace = "OtherNamespace.ProductIdNamespace"]
            public sealed class Product;
        }
        
        namespace OtherNamespace.ProductIdNamespace
        {
            public readonly record struct ProductId;
        }
        """;

        var output = """
         //------------------------------------------------------------------------------
         // <auto-generated>
         //     This code was generated by the dr-marek-jaskula source generator
         //
         //     Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
         // </auto-generated>
         //------------------------------------------------------------------------------

         #nullable enable

         using Microsoft.EntityFrameworkCore.ChangeTracking;
         using OtherNamespace.ProductIdNamespace;

         namespace MyNamespace;

         public sealed class ProductIdComparer : ValueComparer<ProductId>
         {
             public ProductIdComparer() : base((id1, id2) => id1!.Value == id2!.Value, id => id.Value.GetHashCode()) { }
         }

         """;

        return (input, output);
    }
}